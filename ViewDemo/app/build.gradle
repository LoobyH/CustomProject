apply plugin: 'com.android.application'
Properties props = new Properties()
props.load(new FileInputStream(file(rootProject.file("signing.properties"))))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')
    }
    defaultConfig {
        applicationId "com.goldmantis.wb.viewdemo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
//        ndk {
//            // 指定要ndk需要兼容的架构(这样其他依赖包里mips,x86,armeabi,arm-v8之类的so会被过滤掉)
//            abiFilters "armeabi-v7a", "armeabi"
//        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources  true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'BASE_URL', BASE_URL_RELEASE
            buildConfigField 'String', 'IMAGE_URL', IMAGE_URL_RELEASE
            buildConfigField 'boolean', 'IS_TEST', 'false'
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "release", JPUSH_APPKEY_VALUE: JPUSH_KEY_TEST]
        }
        debug {
            buildConfigField 'String', 'BASE_URL', BASE_URL_DEBUG
            buildConfigField 'String', 'IMAGE_URL', IMAGE_URL_RELEASE
            buildConfigField 'boolean', 'IS_TEST', 'true'
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "debug", JPUSH_APPKEY_VALUE: JPUSH_KEY_TEST]
        }

    }
    signingConfigs {
        release {
            keyAlias props['signing.alias']
            keyPassword props['signing.password']
            storeFile file(rootProject.file("debug.keystore"))
            storePassword props['signing.password']
        }

    }
//    buildToolsVersion '26.0.2'
    //修改生成的apk名字及输出文件夹
    applicationVariants.all {
        variant ->
            variant.outputs.each { output ->
                //新名字
                def newName
                //时间戳
                def timeNow
                //输出文件夹
                def outDirectory
                //是否为Jenkins打包，输出路径不同
                if ("true".equals("IS_JENKINS")) {
                    //BUILD_PATH为服务器输出路径
                    timeNow = BUILD_TIME
                    outDirectory = "BUILD_PATH_JENKINS"
                    //xx-v1.0.1-release.apk
                    newName = APPNAME + '-v' + APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '.apk'
                    output.outputFile = new File(outDirectory + "/" + timeNow, newName)
                } else {
                    //本机打包输出在本机路径
                    outDirectory = "BUILD_PATH_LOCAL"
                    if ("debug".equals(variant.buildType.name)) {
                        newName = APPNAME + '-' + APP_VERSION + '-' + variant.buildType.name + '.apk'
//                         newName = variant.buildType.name +'.apk'
                    } else {
                        newName = APPNAME + '-' + APP_VERSION + '-' + variant.buildType.name + '-' + "getDate()" + '.apk'
                    }
                    output.outputFile = new File(outDirectory, newName)
                }
            }
    }
    productFlavors {
        flavor {
        }
    }
    productFlavors.all { flavor ->
        manifestPlaceholders.put("UMENG_CHANNEL_VALUE",name)
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:' + rootProject.ext.supportVersion
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:design:' + rootProject.ext.supportVersion
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.google.guava:guava:16.0.1'
    compile 'com.android.support:recyclerview-v7:' + rootProject.ext.supportVersion
    compile 'in.srain.cube:ultra-ptr:1.0.11'
    compile 'com.android.support:recyclerview-v7:' + rootProject.ext.supportVersion
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.google.zxing:core:3.3.0'
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4'
    compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.4'
    //没有使用特殊Header，可以不加这行
    compile 'com.android.support:support-v4:' + rootProject.ext.supportVersion
    compile 'com.github.bumptech.glide:glide:4.3.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'


}
